{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectShopCollections = createSelector([selectShop], shop => shop.collections);\nexport const selectCollectionsForPreview = createSelector([selectShopCollections], collections => collections ? Object.keys(collections).map(key => collections[key]) : []);\nexport const selectCollection = collectionUrlParam => createSelector([selectShopCollections], collections => collections ? collections[collectionUrlParam] : null);\nexport const selectIsCollectionsFetching = createSelector([selectShop], shop => shop.isFetching);\nexport const selectIsCollectionsLoaded = createSelector([selectShop], shop => !!shop.collections);","map":{"version":3,"sources":["/Users/sharonhe/Documents/Web Development/React/everest/client/src/redux/shop/shop.selector.js"],"names":["createSelector","selectShop","state","shop","selectShopCollections","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsCollectionsFetching","isFetching","selectIsCollectionsLoaded"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,qBAAqB,GAAGJ,cAAc,CAC/C,CAACC,UAAD,CAD+C,EAE/CE,IAAI,IAAIA,IAAI,CAACE,WAFkC,CAA5C;AAKP,OAAO,MAAMC,2BAA2B,GAAGN,cAAc,CACrD,CAACI,qBAAD,CADqD,EAEjDC,WAAW,IACPA,WAAW,GACXE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CACAC,GAAG,IAAIL,WAAW,CAACK,GAAD,CADlB,CADW,GAGV,EAN4C,CAAlD;AASP,OAAO,MAAMC,gBAAgB,GAAGC,kBAAkB,IAC9CZ,cAAc,CACV,CAACI,qBAAD,CADU,EAEVC,WAAW,IACPA,WAAW,GACXA,WAAW,CAACO,kBAAD,CADA,GAET,IALI,CADX;AASP,OAAO,MAAMC,2BAA2B,GAAGb,cAAc,CACrD,CAACC,UAAD,CADqD,EAErDE,IAAI,IAAIA,IAAI,CAACW,UAFwC,CAAlD;AAKP,OAAO,MAAMC,yBAAyB,GAAGf,cAAc,CACnD,CAACC,UAAD,CADmD,EAEnDE,IAAI,IAAI,CAAC,CAACA,IAAI,CAACE,WAFoC,CAAhD","sourcesContent":["import { createSelector } from 'reselect'\n\nconst selectShop = state => state.shop;\n\nexport const selectShopCollections = createSelector(\n    [selectShop],\n    shop => shop.collections\n)\n\nexport const selectCollectionsForPreview = createSelector(\n    [selectShopCollections],\n        collections => \n            collections ? \n            Object.keys(collections).map(\n            key => collections[key]\n        )  : []\n)\n\nexport const selectCollection = collectionUrlParam => (\n    createSelector(\n        [selectShopCollections],\n        collections => \n            collections ? \n            collections[collectionUrlParam]\n            : null) \n)\n\nexport const selectIsCollectionsFetching = createSelector(\n    [selectShop],\n    shop => shop.isFetching\n)\n\nexport const selectIsCollectionsLoaded = createSelector(\n    [selectShop],\n    shop => !!shop.collections\n)"]},"metadata":{},"sourceType":"module"}