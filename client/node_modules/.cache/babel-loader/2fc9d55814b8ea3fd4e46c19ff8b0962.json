{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyD7-_BEI0Y0blezwKODSSJTbtmfc9n15t4\",\n  authDomain: \"everest-79065.firebaseapp.com\",\n  databaseURL: \"https://everest-79065.firebaseio.com\",\n  projectId: \"everest-79065\",\n  storageBucket: \"everest-79065.appspot.com\",\n  messagingSenderId: \"561915203016\",\n  appId: \"1:561915203016:web:3f4cfe5444ad0f7ceac4fd\",\n  measurementId: \"G-REGVGZ5DCH\"\n};\nexport const createSubscriptionPage = async (subAuth, additionalData) => {\n  if (!subAuth) return;\n  const subRef = firestore.doc(`subscription/${subAuth.uid}`);\n  const snapShot = await subRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = subAuth;\n    const createdAt = new Date();\n\n    try {\n      await subRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return subRef;\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  console.log(collectionRef);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/sharonhe/Documents/Web Development/React/everest/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createSubscriptionPage","subAuth","additionalData","subRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","createUserProfileDocument","userAuth","userRef","initializeApp","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","title","items","data","routeName","encodeURI","toLowerCase","id","reduce","accumulator","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: \"AIzaSyD7-_BEI0Y0blezwKODSSJTbtmfc9n15t4\",\n    authDomain: \"everest-79065.firebaseapp.com\",\n    databaseURL: \"https://everest-79065.firebaseio.com\",\n    projectId: \"everest-79065\",\n    storageBucket: \"everest-79065.appspot.com\",\n    messagingSenderId: \"561915203016\",\n    appId: \"1:561915203016:web:3f4cfe5444ad0f7ceac4fd\",\n    measurementId: \"G-REGVGZ5DCH\"\n}\n\nexport const createSubscriptionPage = async(subAuth, additionalData) => {\n  if(!subAuth) return;\n\n  const subRef = firestore.doc(`subscription/${subAuth.uid}`);\n  \n  const snapShot = await subRef.get();\n\n  if(!snapShot.exists) {\n    const { displayName, email } = subAuth;\n    const createdAt = new Date();\n    try {\n      await subRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch(error) {\n      console.log('error creating user', error.message)\n    }\n  }\n  \n  return subRef;\n}\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\n\nfirebase.initializeApp(config);\n\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  console.log(collectionRef)\n\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  })\n\n  return await batch.commit();\n}\n\nexport const convertCollectionsSnapshotToMap = (collections) => {\n    const transformedCollection = collections.docs.map(doc => {\n      const { title, items } = doc.data();\n\n      return {\n        routeName: encodeURI(title.toLowerCase()),\n        id: doc.id,\n        title, \n        items\n      }\n    })\n\n    return transformedCollection.reduce((accumulator, collection ) => {\n      accumulator[collection.title.toLowerCase()] = collection;\n      return accumulator;\n    }, { })\n}\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n  \nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n  \nexport default firebase;"]},"metadata":{},"sourceType":"module"}