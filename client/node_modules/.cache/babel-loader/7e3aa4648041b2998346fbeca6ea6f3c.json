{"ast":null,"code":"var _jsxFileName = \"/Users/sharonhe/Documents/Web Development/React/everest/client/src/components/stripe-button/stripe-button.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport { removeAllItems } from '../../redux/cart/cart.actions';\n\nconst StripeCheckoutButton = ({\n  price,\n  history,\n  dispatch\n}) => {\n  const priceForStripe = price * 100;\n  const publishableKey = 'pk_test_51H0Zt7Hagg9Xnev16tP9n0FjVh6emtjX52zfaQJGKpKh8RgnWzIktM41NF4JHR1cFHPCQiztvpGXArXkoZlqK45t00BSAGlS6v';\n\n  const onToken = token => {\n    axios({\n      url: 'payment',\n      method: 'post',\n      data: {\n        amount: priceForStripe,\n        token\n      }\n    }).then(res => {\n      history.push('/checkout/paymentconfirmed');\n      dispatch(removeAllItems());\n    }).catch(error => {\n      console.log('Payment error: ', JSON.parse(error));\n      alert('There was an issue with your payment.');\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(StripeCheckout, {\n    label: \"Pay Now\",\n    name: \"everest\",\n    billingAddress: true,\n    shippingAddress: true,\n    image: \"http://images.unsplash.com/photo-1549880338-65ddcdfd017b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1650&q=80\",\n    description: `Your total is $${price}.`,\n    amount: priceForStripe,\n    panelLabel: \"Pay Now\",\n    token: onToken,\n    stripeKey: publishableKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  });\n};\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: removeAllItems\n});\nexport default withRouter(connect(mapStateToProps)(StripeCheckoutButton));","map":{"version":3,"sources":["/Users/sharonhe/Documents/Web Development/React/everest/client/src/components/stripe-button/stripe-button.component.jsx"],"names":["React","connect","createStructuredSelector","StripeCheckout","withRouter","axios","removeAllItems","StripeCheckoutButton","price","history","dispatch","priceForStripe","publishableKey","onToken","token","url","method","data","amount","then","res","push","catch","error","console","log","JSON","parse","alert","mapStateToProps","cartItems"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,cAAT,QAA+B,+BAA/B;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,OAAT;AAAkBC,EAAAA;AAAlB,CAAD,KAAkC;AAC3D,QAAMC,cAAc,GAAGH,KAAK,GAAG,GAA/B;AACA,QAAMI,cAAc,GAAG,6GAAvB;;AACA,QAAMC,OAAO,GAAGC,KAAK,IAAI;AACrBT,IAAAA,KAAK,CAAC;AACFU,MAAAA,GAAG,EAAE,SADH;AAEFC,MAAAA,MAAM,EAAE,MAFN;AAGFC,MAAAA,IAAI,EAAE;AACFC,QAAAA,MAAM,EAAEP,cADN;AAEFG,QAAAA;AAFE;AAHJ,KAAD,CAAL,CAOGK,IAPH,CAOQC,GAAG,IAAI;AACXX,MAAAA,OAAO,CAACY,IAAR,CAAa,4BAAb;AACAX,MAAAA,QAAQ,CAACJ,cAAc,EAAf,CAAR;AACH,KAVD,EAUGgB,KAVH,CAUSC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BC,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAA/B;AACAK,MAAAA,KAAK,CAAC,uCAAD,CAAL;AACH,KAbD;AAcH,GAfD;;AAiBA,sBACI,oBAAC,cAAD;AACI,IAAA,KAAK,EAAC,SADV;AAEI,IAAA,IAAI,EAAC,SAFT;AAGI,IAAA,cAAc,MAHlB;AAII,IAAA,eAAe,MAJnB;AAKI,IAAA,KAAK,EAAC,oIALV;AAMI,IAAA,WAAW,EAAG,kBAAkBpB,KAAO,GAN3C;AAOI,IAAA,MAAM,EAAGG,cAPb;AAQI,IAAA,UAAU,EAAC,SARf;AASI,IAAA,KAAK,EAAGE,OATZ;AAUI,IAAA,SAAS,EAAGD,cAVhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAcH,CAlCD;;AAoCA,MAAMiB,eAAe,GAAG3B,wBAAwB,CAAC;AAC7C4B,EAAAA,SAAS,EAAExB;AADkC,CAAD,CAAhD;AAIA,eAAeF,UAAU,CAACH,OAAO,CAAC4B,eAAD,CAAP,CAAyBtB,oBAAzB,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\nimport StripeCheckout from 'react-stripe-checkout'\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\n\nimport { removeAllItems } from '../../redux/cart/cart.actions'\n\nconst StripeCheckoutButton = ({ price, history, dispatch }) => {\n    const priceForStripe = price * 100\n    const publishableKey = 'pk_test_51H0Zt7Hagg9Xnev16tP9n0FjVh6emtjX52zfaQJGKpKh8RgnWzIktM41NF4JHR1cFHPCQiztvpGXArXkoZlqK45t00BSAGlS6v'\n    const onToken = token => {\n        axios({ \n            url: 'payment',\n            method: 'post',\n            data: {\n                amount: priceForStripe,\n                token\n            }\n        }).then(res => {\n            history.push('/checkout/paymentconfirmed')\n            dispatch(removeAllItems())\n        }).catch(error => {\n            console.log('Payment error: ', JSON.parse(error));\n            alert('There was an issue with your payment.')\n        })\n    }\n\n    return (\n        <StripeCheckout\n            label='Pay Now'\n            name='everest'\n            billingAddress\n            shippingAddress\n            image='http://images.unsplash.com/photo-1549880338-65ddcdfd017b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1650&q=80'\n            description={`Your total is $${ price }.`}\n            amount={ priceForStripe }\n            panelLabel='Pay Now'\n            token={ onToken }\n            stripeKey={ publishableKey }\n        />\n    )\n}\n\nconst mapStateToProps = createStructuredSelector({\n    cartItems: removeAllItems\n})\n\nexport default withRouter(connect(mapStateToProps)(StripeCheckoutButton));"]},"metadata":{},"sourceType":"module"}