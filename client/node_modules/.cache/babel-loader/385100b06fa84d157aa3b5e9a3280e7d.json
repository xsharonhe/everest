{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(fetch => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["/Users/sharonhe/Documents/Web Development/React/everest/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","collectionsMap","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","fetch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAO,MAAMC,qBAAqB,GAAIC,cAAD,KAAqB;AACtDC,EAAAA,IAAI,EAAEL,eAAe,CAACM;AADgC,CAArB,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAGH,cAAc,KAAK;AACtDC,EAAAA,IAAI,EAAEL,eAAe,CAACQ,yBADgC;AAEtDC,EAAAA,OAAO,EAAEL;AAF6C,CAAL,CAA9C;AAKP,OAAO,MAAMM,uBAAuB,GAAGC,YAAY,KAAK;AACpDN,EAAAA,IAAI,EAAEL,eAAe,CAACY,yBAD8B;AAEpDH,EAAAA,OAAO,EAAEE;AAF2C,CAAL,CAA5C;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC5C,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AAEAY,IAAAA,aAAa,CAACE,GAAd,GACKC,IADL,CACUC,QAAQ,IAAI;AAClB,YAAMf,cAAc,GAAGF,+BAA+B,CAACiB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACP,uBAAuB,CAACH,cAAD,CAAxB,CAAR;AACC,KAJL,EAKKgB,KALL,CAKWC,KAAK,IAAIP,QAAQ,CAACJ,uBAAuB,CAACY,KAAK,CAACC,OAAP,CAAxB,CAL5B;AAMH,GAVD;AAWH,CAZM","sourcesContent":["import ShopActionTypes from './shop.types';\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\n\nexport const fetchCollectionsStart = (collectionsMap) => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_START,\n})\n\nexport const fetchCollectionsSuccess = collectionsMap => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n    payload: collectionsMap\n})\n\nexport const fetchCollectionsFailure = errorMessage => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n    payload: errorMessage\n})\n\nexport const fetchCollectionsStartAsync = () => {\n    return dispatch => {\n        const collectionRef = firestore.collection('collections');\n        dispatch(fetchCollectionsStart());\n \n        collectionRef.get()\n            .then(snapshot => {\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n            dispatch(fetchCollectionsSuccess(collectionsMap));\n            })\n            .catch(fetch => dispatch(fetchCollectionsFailure(error.message)))\n    }\n}"]},"metadata":{},"sourceType":"module"}